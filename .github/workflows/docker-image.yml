name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "master-entw" ]
  pull_request:
    branches: [ "master-entw" ]

jobs:
  build:
#    runs-on: github
    runs-on: self-hosted
    env:
      BUILDKIT_PROGRESS: 'plain'
    steps:
    - 
      name: Get Date
      id: get-date
      run: |
        echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
      shell: bash

    - 
      name: Get docker guid
      id: get-docker-guid
      run: |
        echo "docker-guid=$(id -u docker)" >> $GITHUB_OUTPUT
      shell: bash

    -
      name: Build the Docker image
      uses: actions/checkout@v4
      with:
        ref: 'master-entw'

    - 
      name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-multi-buildx-${{ github.ref_name }}-${{ steps.get-date.outputs.date }} #${{ github.sha }} ${{ github.ref_name }}
        restore-keys: |
          ${{ runner.os }}-multi-buildx-${{ github.ref_name }}-
      # with:
      #   path: |
      #     !.git
      #     !.github
      #     !.libreelec
      #     !build.*
      #     !builds
      #     !target
#          path/to/dependencies
#          some/other/dependencies
        # key: ${{ runner.os }}-${{ github.ref_name }}-${{ hashFiles('**/lockfiles') }}
        # restore-keys: |
        #   ${{ runner.os }}-${{ github.ref_name }}-

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: "${{ secrets.REGISTRY_FQDN }}"
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PWD }}

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        # https://github.com/moby/buildkit/blob/master/docs/buildkitd.toml.md
        buildkitd-config-inline: |
          debug = true
          [registry."${{ secrets.REGISTRY_FQDN }}"]
            http = false
            mirrors = ["localhost"]
        cleanup: true
#        buildkitd-flags: '"--progress ''plain''"'

    -
      name: Build and export to (local) registry
      uses: docker/build-push-action@v6
      with:
        file: tools/docker/noble/Dockerfile
        load: true
        tags: "${{ secrets.REGISTRY_FQDN }}/libreelec.noble"
        build-args: |
          --progress=plain
          USER_UID=${{ steps.get-docker-guid.outputs.docker-guid }}
#          DOCKER_BUILDKIT=0
        no-cache: false
        # cache-from: type=registry,ref=${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_IMAGE_NAME }}.1:buildcache
        # cache-to: type=registry,ref=${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_IMAGE_NAME }}.1:buildcache,mode=max
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache

    - 
      name: Build LibreELEC image
      run: |
        chown -R docker:docker . && \
        docker login --username ${{ vars.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }} && \
        docker run --rm \
          --log-driver local \
          --name "buildLibreELEC.noble" \
          -v $PWD:/build \
          -w /build \
          -e MTIMMEDIATE=yes \
          -e MTDEBUG=no \
          -e MTVERBOSE=no \
          -e MTPROGRESS=yes \
          -e PROJECT=RPi \
          -e DEVICE=RPi4 \
          -e ARCH=aarch64 \
          "${{ secrets.REGISTRY_FQDN }}/libreelec.noble" make image

    - 
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: "${{ secrets.REGISTRY_FQDN }}/libreelec.noble"
